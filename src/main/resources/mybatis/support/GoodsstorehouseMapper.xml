<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.support.dao.GoodsstorehouseDao">

	<select id="get" resultType="com.bootdo.support.dto.GoodsstorehouseDO">
		select `id`,`name`,`code`,`lat_lon`,`addr`,`contact`,`mobile`,`sort_no`,`enabled`,`remarks`,`create_by`,`create_date`,`update_by`,`update_date` from safeguard_goodsstorehouse where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.support.dto.GoodsstorehouseDO">
		select `id`,`name`,`code`,`lat_lon`,`addr`,`contact`,`mobile`,`sort_no`,`enabled`,`remarks`,`create_by`,`create_date`,`update_by`,`update_date` from safeguard_goodsstorehouse
        <where>
			enabled = '1'
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name like concat('%',#{name},'%') </if>
		  		  <if test="code != null and code != ''"> and code = #{code} </if>
		  		  <if test="latLon != null and latLon != ''"> and lat_lon = #{latLon} </if>
		  		  <if test="addr != null and addr != ''"> and addr = #{addr} </if>
		  		  <if test="contact != null and contact != ''"> and contact = #{contact} </if>
		  		  <if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
		  		  <if test="sortNo != null and sortNo != ''"> and sort_no = #{sortNo} </if>
		  		  <if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from safeguard_goodsstorehouse
		 <where>
			 enabled = '1'
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name like concat('%',#{name},'%') </if>
		  		  <if test="code != null and code != ''"> and code = #{code} </if>
		  		  <if test="latLon != null and latLon != ''"> and lat_lon = #{latLon} </if>
		  		  <if test="addr != null and addr != ''"> and addr = #{addr} </if>
		  		  <if test="contact != null and contact != ''"> and contact = #{contact} </if>
		  		  <if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
		  		  <if test="sortNo != null and sortNo != ''"> and sort_no = #{sortNo} </if>
		  		  <if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.support.dto.GoodsstorehouseDO">
		insert into safeguard_goodsstorehouse
		(
			`id`, 
			`name`, 
			`code`, 
			`lat_lon`, 
			`addr`, 
			`contact`, 
			`mobile`, 
			`sort_no`, 
			`enabled`, 
			`remarks`, 
			`create_by`, 
			`create_date`, 
			`update_by`, 
			`update_date`
		)
		values
		(
			#{id}, 
			#{name}, 
			#{code}, 
			#{latLon}, 
			#{addr}, 
			#{contact}, 
			#{mobile}, 
			#{sortNo}, 
			#{enabled}, 
			#{remarks}, 
			#{createBy}, 
			#{createDate}, 
			#{updateBy}, 
			#{updateDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.support.dto.GoodsstorehouseDO">
		update safeguard_goodsstorehouse 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="code != null">`code` = #{code}, </if>
			<if test="latLon != null">`lat_lon` = #{latLon}, </if>
			<if test="addr != null">`addr` = #{addr}, </if>
			<if test="contact != null">`contact` = #{contact}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="sortNo != null">`sort_no` = #{sortNo}, </if>
			<if test="enabled != null">`enabled` = #{enabled}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateDate != null">`update_date` = #{updateDate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from safeguard_goodsstorehouse where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from safeguard_goodsstorehouse where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<update id="logicalDelete">
		update safeguard_goodsstorehouse set enabled='0' where id=#{id}
	</update>

	<select id="getGoodsAllHouse" resultType="java.util.Map">
		select
		t.id as 'houseId',
		t.name as 'houseName',
		t.code as 'houseCode',
		t.lat_lon as 'houseLocation',
		t.addr as 'houseAddr',
		t.contact as 'houseContact',
		t.mobile as 'houseMobile'
		from safeguard_goodsstorehouse t where t.enabled = '1'
	</select>
	
	<select id="getGoodsLevelOneByHouseId" resultType="java.util.Map">
		select distinct
		sot.id as 'level1Id',
		sot.name as 'level1Name',
		sot.remarks as 'level1Remarks'
		from safeguard_oneleveltype sot left join safeguard_goodsinfo sgf on sot.id=sgf.oneleveltype_id
		left join safeguard_storehouse_goods ssg on sgf.id=ssg.goodsinfo_id left join safeguard_goodsstorehouse sgsh on ssg.goodsstorehouse_id=sgsh.id
		where sgsh.id=#{houseId, jdbcType=VARCHAR} order by sot.sort_no
	</select>

	<select id="getGoodsLevelTwoByHouseIdAndOneId" resultType="java.util.Map">
		select distinct
		stt.id as 'level2Id',
		stt.name as 'level2Name',
		stt.remarks as 'level2Remarks'
		from safeguard_twoleveltype stt where stt.id in
		(select sgf.twoleveltype_id from safeguard_goodsinfo sgf
		left join safeguard_storehouse_goods ssg on sgf.id=ssg.goodsinfo_id
		left join safeguard_goodsstorehouse sgsh on ssg.goodsstorehouse_id=sgsh.id
		where sgsh.id=#{houseId, jdbcType=VARCHAR}) and stt.oneleveltype_id=#{levelOneId, jdbcType=VARCHAR}
		order by stt.sort_no
	</select>

	<select id="getGoodsByTwoLevelIdAndHouseId" resultType="java.util.Map">
		select
		sgf.id as 'goodsId',
		sgf.goodsname as 'goodsName',
		sgf.unit as 'goodsUnit',
		ssg.inventorynum as 'goodsNum',
		sgsh.addr as 'address',
		sgsh.contact,
		sgsh.mobile
		from safeguard_goodsinfo sgf
		left join safeguard_storehouse_goods ssg on sgf.id=ssg.goodsinfo_id
		left join safeguard_goodsstorehouse sgsh on ssg.goodsstorehouse_id=sgsh.id
		where sgf.twoleveltype_id=#{levelTwoId, jdbcType=VARCHAR} and sgsh.id=#{houseId, jdbcType=VARCHAR}


	</select>

</mapper>