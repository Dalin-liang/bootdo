<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.support.dao.KnowledgeEmergencyDao">

	<select id="get" resultType="com.bootdo.support.dto.KnowledgeEmergencyDO">
		select `id`,`knowledge_info_Id`,`isolation_safety`,`leakage_response`,`fire_fighting`,`emergency_rescue`,`create_date` from safeguard_knowledge_emergency where id = #{value}
	</select>
	
	<select id="getByKnowledgeInfoId" resultType="com.bootdo.support.dto.KnowledgeEmergencyDO">
		select `id`,`knowledge_info_Id`,`isolation_safety`,`leakage_response`,`fire_fighting`,`emergency_rescue`,`create_date` from safeguard_knowledge_emergency where knowledge_info_Id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.support.dto.KnowledgeEmergencyDO">
		select `id`,`knowledge_info_Id`,`isolation_safety`,`leakage_response`,`fire_fighting`,`emergency_rescue`,`create_date` from safeguard_knowledge_emergency
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="knowledgeInfoId != null and knowledgeInfoId != ''"> and knowledge_info_Id = #{knowledgeInfoId} </if>
		  		  <if test="isolationSafety != null and isolationSafety != ''"> and isolation_safety = #{isolationSafety} </if>
		  		  <if test="leakageResponse != null and leakageResponse != ''"> and leakage_response = #{leakageResponse} </if>
		  		  <if test="fireFighting != null and fireFighting != ''"> and fire_fighting = #{fireFighting} </if>
		  		  <if test="emergencyRescue != null and emergencyRescue != ''"> and emergency_rescue = #{emergencyRescue} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from safeguard_knowledge_emergency
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="knowledgeInfoId != null and knowledgeInfoId != ''"> and knowledge_info_Id = #{knowledgeInfoId} </if>
		  		  <if test="isolationSafety != null and isolationSafety != ''"> and isolation_safety = #{isolationSafety} </if>
		  		  <if test="leakageResponse != null and leakageResponse != ''"> and leakage_response = #{leakageResponse} </if>
		  		  <if test="fireFighting != null and fireFighting != ''"> and fire_fighting = #{fireFighting} </if>
		  		  <if test="emergencyRescue != null and emergencyRescue != ''"> and emergency_rescue = #{emergencyRescue} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.support.dto.KnowledgeEmergencyDO">
		insert into safeguard_knowledge_emergency
		(
			`id`, 
			`knowledge_info_Id`, 
			`isolation_safety`, 
			`leakage_response`, 
			`fire_fighting`, 
			`emergency_rescue`, 
			`create_date`
		)
		values
		(
			#{id}, 
			#{knowledgeInfoId}, 
			#{isolationSafety}, 
			#{leakageResponse}, 
			#{fireFighting}, 
			#{emergencyRescue}, 
			#{createDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.support.dto.KnowledgeEmergencyDO">
		update safeguard_knowledge_emergency 
		<set>
			<if test="knowledgeInfoId != null">`knowledge_info_Id` = #{knowledgeInfoId}, </if>
			<if test="isolationSafety != null">`isolation_safety` = #{isolationSafety}, </if>
			<if test="leakageResponse != null">`leakage_response` = #{leakageResponse}, </if>
			<if test="fireFighting != null">`fire_fighting` = #{fireFighting}, </if>
			<if test="emergencyRescue != null">`emergency_rescue` = #{emergencyRescue}, </if>
			<if test="createDate != null">`create_date` = #{createDate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from safeguard_knowledge_emergency where id = #{value}
	</delete>
	
	<delete id="deleteByKnowledgeInfoId">
		delete from safeguard_knowledge_emergency where knowledge_info_Id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from safeguard_knowledge_emergency where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>