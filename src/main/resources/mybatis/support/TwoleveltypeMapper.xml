<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.support.dao.TwoleveltypeDao">

	<select id="get" resultType="com.bootdo.support.entity.TwoleveltypeDO">
		select `id`,`oneleveltype_id`,`name`,`enabled`,`sort_no`,`remarks`,`create_by`,`create_date`,`update_by`,`update_date` from safeguard_twoleveltype where id = #{value}
	</select>
	
	<select id="getAll" resultType="com.bootdo.support.entity.TwoleveltypeDO">
		select `id`,`oneleveltype_id`,`name`,`enabled`,`sort_no`,`remarks`,`create_by`,`create_date`,`update_by`,`update_date` 
		from safeguard_twoleveltype 
		where enabled = '1'
		ORDER BY sort_no ASC
	</select>

	<select id="list" resultType="com.bootdo.support.entity.TwoleveltypeDO">
		select `id`,`oneleveltype_id`,`name`,`enabled`,`sort_no`,`remarks`,`create_by`,`create_date`,`update_by`,`update_date` from safeguard_twoleveltype
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="oneleveltypeId != null and oneleveltypeId != ''"> and oneleveltype_id = #{oneleveltypeId} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="enabled != null and enabled != ''"> and enabled = #{enabled} </if>
		  		  <if test="sortNo != null and sortNo != ''"> and sort_no = #{sortNo} </if>
		  		  <if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from safeguard_twoleveltype
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="oneleveltypeId != null and oneleveltypeId != ''"> and oneleveltype_id = #{oneleveltypeId} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="enabled != null and enabled != ''"> and enabled = #{enabled} </if>
		  		  <if test="sortNo != null and sortNo != ''"> and sort_no = #{sortNo} </if>
		  		  <if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.support.entity.TwoleveltypeDO">
		insert into safeguard_twoleveltype
		(
			`id`, 
			`oneleveltype_id`, 
			`name`, 
			`enabled`, 
			`sort_no`, 
			`remarks`, 
			`create_by`, 
			`create_date`, 
			`update_by`, 
			`update_date`
		)
		values
		(
			#{id}, 
			#{oneleveltypeId}, 
			#{name}, 
			#{enabled}, 
			#{sortNo}, 
			#{remarks}, 
			#{createBy}, 
			#{createDate}, 
			#{updateBy}, 
			#{updateDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.support.entity.TwoleveltypeDO">
		update safeguard_twoleveltype 
		<set>
			<if test="oneleveltypeId != null">`oneleveltype_id` = #{oneleveltypeId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="enabled != null">`enabled` = #{enabled}, </if>
			<if test="sortNo != null">`sort_no` = #{sortNo}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateDate != null">`update_date` = #{updateDate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from safeguard_twoleveltype where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from safeguard_twoleveltype where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>