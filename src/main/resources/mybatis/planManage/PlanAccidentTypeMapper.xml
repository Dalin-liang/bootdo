<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.planManage.dao.PlanAccidentTypeDao">

	<sql id="planAccidentTypeColumns">
		a.`id` As id, 
		a.`name` As name,
		a.`dept_id` As deptId,
		a.`status` As status,
		a.`remarks` As remarks,
		a.`create_by` As createBy,
		a.`create_date` As createDate,
		a.`update_by` As updateBy,
		a.`update_date` As updateDate, 
		dept.name As deptName
	</sql>
	
	<sql id="planAccidentTypeJoins">
		LEFT JOIN safeguard_dept dept ON dept.id = a.dept_id
	</sql>
	
	<select id="get" resultType="com.bootdo.planManage.domain.PlanAccidentTypeDO">
		select 
			<include refid="planAccidentTypeColumns"/>
		from plan_accident_type a
		<include refid="planAccidentTypeJoins"/>
		where a.id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.planManage.domain.PlanAccidentTypeDO">
		select 
			<include refid="planAccidentTypeColumns"/>
		from plan_accident_type a
		<include refid="planAccidentTypeJoins"/>
        <where>  
  			<if test="name != null and name != ''"> and a.name like concat('%',#{name},'%') </if>
  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by a.create_date desc, a.update_date desc , ${sort} ${order}
            </when>
			<otherwise>
                order by a.create_date desc, a.update_date desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="getAccidentType" resultType="com.bootdo.planManage.domain.PlanAccidentTypeDO">
		select 
			<include refid="planAccidentTypeColumns"/>
		from plan_accident_type a
		<include refid="planAccidentTypeJoins"/>
		where a.status ='1' OR a.status ='2'
		ORDER BY a.update_date DESC,a.create_date DESC
	</select>
	
	<select id="getDpetList" resultType="java.util.HashMap">
		SELECT d.id,d.name,d.contact,d.mobile
		FROM safeguard_dept d
		WHERE IFNULL(d.enabled,0) !=1 
		ORDER BY d.update_date DESC,d.create_date DESC
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from plan_accident_type
		 <where>  
	  		  <if test="name != null and name != ''"> and name like concat('%',#{name},'%') </if>
  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.planManage.domain.PlanAccidentTypeDO">
		insert into plan_accident_type
		(
			`id`, 
			`name`, 
			`dept_id`, 
			`status`, 
			`remarks`, 
			`create_by`, 
			`create_date`, 
			`update_by`, 
			`update_date`
		)
		values
		(
			#{id}, 
			#{name}, 
			#{deptId}, 
			#{status}, 
			#{remarks}, 
			#{createBy}, 
			#{createDate}, 
			#{updateBy}, 
			#{updateDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.planManage.domain.PlanAccidentTypeDO">
		update plan_accident_type 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateDate != null">`update_date` = #{updateDate}</if>
		</set>
		where id = #{id}
	</update>
	
	<update id="changeStatus"  parameterType="java.lang.String">
		update plan_accident_type set `status` = #{status}
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from plan_accident_type where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from plan_accident_type where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getIdByName" resultType="String">
		SELECT id
		FROM plan_accident_type
		WHERE NAME = #{name}
		LIMIT 1
	</select>

</mapper>