<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.planManage.dao.PlanRespDeptDao">

	<sql id="planRespDeptColumns">
		a.`id` As id,
		a.`sort_no` As sortNo,
		a.`plan_main_id` As planMainId,
		a.`dept_id` As deptId,
		a.`content` As content,
		a.`liability_man` As liabilityMan,
		a.`mobile` As mobile,
		a.`create_by` As createBy,
		a.`create_date` As createDate,
		a.`update_by` As updateBy,
		a.`update_date` As updateDate ,
		
		respDept.name As deptName,
		planMain.name As planMainName
	</sql>
	
	<sql id="planRespDeptJoins">
		LEFT JOIN safeguard_dept respDept ON respDept.id = a.dept_id
		LEFT JOIN plan_main planMain ON planMain.id = a.plan_main_id
		
	</sql>
	
	<select id="get" resultType="com.bootdo.planManage.domain.PlanRespDeptDO">
		select 
			<include refid="planRespDeptColumns"/>
		from plan_resp_dept a
		<include refid="planRespDeptJoins"/>
		where a.id = #{value}
	</select>
	
	<select id="getByPlanId" resultType="com.bootdo.planManage.domain.PlanRespDeptDO">
		select 
			<include refid="planRespDeptColumns"/>
		from plan_resp_dept a
		<include refid="planRespDeptJoins"/>
		where a.plan_main_id = #{value}
		order by a.sort_no ASC
	</select>

	<select id="list" resultType="com.bootdo.planManage.domain.PlanRespDeptDO">
		select 
			<include refid="planRespDeptColumns"/>
		from plan_resp_dept a
		<include refid="planRespDeptJoins"/>
        <where>  
		  		  <if test="id != null and id != ''"> and a.id = #{id} </if>
		  		  <if test="sortNo != null and sortNo != ''"> and a.sort_no = #{sortNo} </if>
		  		  <if test="planMainId != null and planMainId != ''"> and a.plan_main_id = #{planMainId} </if>
		  		  <if test="deptId != null and deptId != ''"> and a.dept_id = #{deptId} </if>
		  		  <if test="content != null and content != ''"> and a.content = #{content} </if>
		  		  <if test="liabilityMan != null and liabilityMan != ''"> and a.liability_man = #{liabilityMan} </if>
		  		  <if test="mobile != null and mobile != ''"> and a.mobile = #{mobile} </if>
		  		  <if test="createBy != null and createBy != ''"> and a.create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and a.create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and a.update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and a.update_date = #{updateDate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by a.id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from plan_resp_dept a
		 <where>  
		  		  <if test="id != null and id != ''"> and a.id = #{id} </if>
		  		  <if test="planMainId != null and planMainId != ''"> and a.plan_main_id = #{planMainId} </if>
		  		  <if test="deptId != null and deptId != ''"> and a.dept_id = #{deptId} </if>
		  		  <if test="content != null and content != ''"> and a.content = #{content} </if>
		  		  <if test="liabilityMan != null and liabilityMan != ''"> and a.liability_man = #{liabilityMan} </if>
		  		  <if test="mobile != null and mobile != ''"> and a.mobile = #{mobile} </if>
		  		  <if test="createBy != null and createBy != ''"> and a.create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and a.create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and a.update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and a.update_date = #{updateDate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.planManage.domain.PlanRespDeptDO"  useGeneratedKeys="true" keyProperty="id">
		insert into plan_resp_dept
		(
			`id`, 
			`sort_no`,
			`plan_main_id`, 
			`dept_id`, 
			`content`, 
			`liability_man`, 
			`mobile`, 
			`create_by`, 
			`create_date`, 
			`update_by`, 
			`update_date`,
			`task_type`
		)
		values
		(
			#{id}, 
			#{sortNo}, 
			#{planMainId}, 
			#{deptId}, 
			#{content}, 
			#{liabilityMan}, 
			#{mobile}, 
			#{createBy}, 
			#{createDate}, 
			#{updateBy}, 
			#{updateDate},
			#{taskType}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.planManage.domain.PlanRespDeptDO">
		update plan_resp_dept 
		<set>
			<if test="sortNo != null">`sort_no` = #{sortNo}, </if>
			<if test="planMainId != null">`plan_main_id` = #{planMainId}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="liabilityMan != null">`liability_man` = #{liabilityMan}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateDate != null">`update_date` = #{updateDate}</if>
			<if test="taskType != null">`task_type` = #{taskType} </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from plan_resp_dept where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from plan_resp_dept where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteByPlanMainId">
		delete from plan_resp_dept where plan_main_id = #{value}
	</delete>

	<delete id="deleteByNotInRespDeptIds">
		delete from plan_resp_dept
		where plan_main_id = #{planMainId} and id not in
		<foreach item="id" collection="planRespDeptIds" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper>