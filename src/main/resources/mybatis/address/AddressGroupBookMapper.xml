<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.address.dao.AddressGroupBookDao">

	<select id="get" resultType="com.bootdo.address.domain.AddressGroupBookDO">
		select `id`,`groupid`,`bookid` from address_group_book where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.address.domain.AddressGroupBookDO">
		select `id`,`groupid`,`bookid` from address_group_book
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="groupid != null and groupid != ''"> and groupid = #{groupid} </if>
		  		  <if test="bookid != null and bookid != ''"> and bookid = #{bookid} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from address_group_book
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="groupid != null and groupid != ''"> and groupid = #{groupid} </if>
		  		  <if test="bookid != null and bookid != ''"> and bookid = #{bookid} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.address.domain.AddressGroupBookDO">
		insert into address_group_book
		(
			`id`, 
			`groupid`, 
			`bookid`
		)
		values
		(
			#{id}, 
			#{groupid}, 
			#{bookid}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.address.domain.AddressGroupBookDO">
		update address_group_book 
		<set>
			<if test="groupid != null">`groupid` = #{groupid}, </if>
			<if test="bookid != null">`bookid` = #{bookid}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from address_group_book where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from address_group_book where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteByGroupId">
		delete from address_group_book where groupid = #{value}
	</delete>

	<delete id="deleteByNotInpersonIds">
		delete from address_group_book
		where groupid = #{groupiId} and bookid not in
		<foreach item="id" collection="personIdsArr" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getBookByGroupId" resultType="java.util.Map">
		SELECT person.*,d.id AS deptId,d.name AS deptName
		FROM address_group_book book
		LEFT JOIN safeguard_deptperson person ON book.`bookid` = person.`id`
		LEFT JOIN safeguard_dept d ON d.id = person.`dept_id`
		where groupid = #{value}
	</select>

</mapper>